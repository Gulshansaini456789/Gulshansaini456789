p1a - Create a simple sequence based project. 

Theory: 
A sequence is a basic automation process in RPA. It is used when the process is divided into 
steps and sequential. It is simpler and easier to use.
Steps:
1. Open UI path studio.
2. In uipath studio start page, under new project click on process
3. A dialog box appears, give a name to the process and select the language as C# and 
click on create.
4. Once a process is created, go to activity panel and add new sequence
5. Add name to the sequence and click on create. A sequence is created.
6. Once the sequence is created, add a message box.
7. Add the text you want to display and click on debug at the top ribbon.
8. This is how we create a simple sequence



p1b - AIM : Create a flowchart-based project. 

Theory: 
Flowcharts can be used in a variety of settings, from large jobs to small projects that you can reuse in 
other projects. The most important aspect of flowcharts is that, unlike sequences, they present 
multiple branching logical operators, that enable you to create complex business processes and 
connect activities in multiple ways.
Steps: 
1. Create a blank process and from the Design tab, in the File group, select New > 
Flowchart. The New Flowchart window is displayed.
2. In the Name field type a name for the automation, such as "First Flowchart", and leave the 
default project location or add a subfolder. Click Create. The Designer panel is updated 
accordingly.
3. Create two Int32 variables (RandomNumber, GuessNumber) and a String one (Message).
4. Set the default value of the Message variable to "Guess a number from 1 to 999." 
The RandomNumber stores a random number between 1 and 999, GuessNumber stores the 
user’s guess and Message stores the message that is going to be displayed to prompt the user.
5. Add an Assign activity to the Designer panel, and connect it to the Start node.
6. In the Properties panel, in the To field add the RandomNumber variable.
7. In the Value field, type new Random().Next(1,999).
8. Add an Input Dialog activity to the Designer panel and connect it to the Assign one.
9. In the Properties panel, in the Label field, add the Message variable.
10. In the Result field, add the GuessNumber variable. This activity asks and stores the user’s 
guesses in the GuessNumber variable.
11. Add a Flow Decision activity and connect it to the Input Dialog. This activity enables you to 
tell the user if he correctly guessed the number or not.
12. In the Properties panel, in the Condition field, type GuessNumber = RandomNumber. This 
enables you to verify if the number added by the user is the same as the randomly-generated 
one.
13. Add a Message Box activity and connect it to the True branch of the Flow Decision.
14. In the Properties panel, in the Text field, type "Congratulations! You guessed correctly! The 
number was " + RandomNumber.ToString + ".". This is the message that is going to be 
displayed if the user correctly guessed the number.
15. Add a new Flow Decision activity and connect it to the False branch of the previously 
added Flow Decision.
16. In the Properties panel, in the Condition field, type GuessNumber > RandomNumber. This 
activity enables you to check if the number the user added is bigger than the randomlygenerated one.
17. In the DisplayName field, type Comparison. This enables you to easily to tell the difference 
between the two Flow Decisions used.
18. Add an Assign activity and connect it to the True branch of the Comparison activity.
19. In the To field, type the Message variable, and in the Value field, type a message indicating 
that the guess was too high, such as "Too big. Try again.".
20. Select the Assign activity and press Ctrl+C. The entire activity and its properties are copied to 
the Clipboard.
21. Press Ctrl + V. A duplicate of the previous Assign activity is displayed.
22. Connect it to the False branch of the Comparison activity and, in the Properties panel, in 
the Value field, type "Too small. Try again.".
23. Connect the Assign activities created at steps 18-22 to the Input Dialog. A loop is created, 
asking the user to type a smaller or bigger number, until he guesses correctly.
The final project should look as in the screenshot below



p1c - AIM : An UiPath Robot which can empty a folder in Gmail solely on basis of recording. 
STEPS : 
1. Complete the Setup steps.
2. Add the Microsoft Office 365 Scope activity to your project.
3. Add an activity or run an external process that outputs a Event object (e.g., Search 
Events).
4. Add the Delete Event activity inside the Microsoft Office 365 Scope activity.
5. Enter values for the Input properties.
6. Run the activity.
o Your input property values are sent to the DeleteEvent API






